/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        semcol {
            bindings = <&kp SEMI>;
            key-positions = <32 33>;
            timeout-ms = <50>;
            layers = <0>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q        &kp W            &kp E              &kp R         &kp T        &kp Y      &kp U         &kp I               &kp O        &kp P                        &kp BSPC
&kp LCTRL       &hml LGUI A  &hml LEFT_ALT S  &hml LEFT_SHIFT D  &hml LCTRL F  &kp G        &kp H      &hmr RCTRL J  &hmr RIGHT_SHIFT K  &hmr LALT L  &hmr RIGHT_GUI SINGLE_QUOTE  &kp ESC
&kp LEFT_SHIFT  &kp Z        &kp X            &kp C              &kp V         &kp B        &kp N      &kp M         &kp COMMA           &kp DOT      &kp FSLH                     &kp RIGHT_SHIFT
                                              &kp LEFT_META      &mo 1         &kp SPACE    &kp ENTER  &mo 2         &kp LEFT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB             &kp N1      &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8        &kp N9     &kp N0   &kp BSPC
&sk LG(LEFT_SHIFT)  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &out OUT_TOG    &kp LEFT  &kp DOWN  &kp UP        &kp RIGHT  &kp F20  &kp F21
&kp LSHFT           &kp F11     &kp F12       &kp F13       &kp F14       &kp F15         &kp F16   &kp F17   &kp F18       &kp F19    &kp F22  &kp F23
                                              &kp LGUI      &trans        &kp SPACE       &kp RET   &tog 4    &kp LEFT_ALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp F1    &kp F2  &kp F3    &kp F4    &kp F5       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &kp F6    &kp F7  &kp F8    &kp F9    &kp F10      &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &mo 3     &kp SPACE    &kp RET    &none      &kp RALT
            >;
        };

        Utilities {
            bindings = <
&trans  &trans           &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMLOCK    &trans  &trans  &kp PRINTSCREEN  &kp C_PAUSE  &kp SCROLLLOCK  &trans
&trans  &trans           &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans            &trans  &trans  &kp INS          &kp HOME     &kp PAGE_UP     &trans
&trans  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans            &trans  &trans  &kp DEL          &kp END      &kp PAGE_DOWN   &trans
                                          &trans           &trans           &kp H             &trans  &trans  &trans
            >;
        };

        GamingLayer {
            bindings = <
&kp ESCAPE  &kp T           &kp Q  &kp W           &kp E  &kp R        &trans  &trans  &trans  &trans  &trans  &trans
&kp TAB     &kp LEFT_SHIFT  &kp A  &kp S           &kp D  &kp F        &trans  &trans  &trans  &trans  &trans  &tog 4
&kp I       &kp LCTRL       &kp Z  &kp X           &kp C  &kp V        &trans  &trans  &trans  &trans  &trans  &trans
                                   &msc SCRL_DOWN  &mo 5  &kp SPACE    &trans  &trans  &trans
            >;
        };

        GamingLayer2 {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &kp NUMBER_4  &kp N5          &trans  &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans  &trans        &kp NUMBER_6    &trans  &trans  &trans  &trans  &trans  &trans
&kp N7        &trans        &kp N7        &kp N8  &kp N9        &kp N0          &trans  &trans  &trans  &trans  &trans  &trans
                                          &trans  &trans        &trans          &trans  &trans  &trans
            >;
        };
    };
};
